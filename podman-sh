#!/bin/sh
set -e
trap '' 2  # disable ctrl-c
try(){ set +e; "$@"; set -e; }
image=alpine:3.16.2
imagecmd="tail -f /dev/random"
cfg_container='[storage]
driver = "overlay"
[storage.options]
additionalimagestores = [ "/var/lib/containers" ]
[storage.options.overlay]
mount_program = "/usr/bin/fuse-overlayfs"
'

shell(){ 
  [ -t 0 ] && t=t # respect interactive mode
  podman exec -i${t}  -w /root $(whoami) /bin/sh "$@";  
}

build(){
  test -f Dockerfile || return 0
  podman images | grep -q localhost/$(whoami) && image=$(whoami) && imagecmd=""
  test -f .build && test "$(md5sum Dockerfile)" = "$(cat .build)" && return 0
  md5sum Dockerfile > .build
  echo "AVAILABLE PODMAN IMAGES:"; podman images
  set +e # jump into default image if build fails
  podman build --build-arg UID=$(id -u) --layers -t $(whoami) . && image=$(whoami)
}

init(){
  build "$@"
  podman ps -f name=$(whoami) | grep $(whoami) 1>/dev/null 2>/dev/null || {
    try podman rm -f $(whoami) 2>/dev/null
    test -f .boot && ./.boot
    test -f .boot || podman run --name=$(whoami) -v /home/$(whoami):/root -v $(pwd)/.motd:/etc/motd -d $image ${imagecmd}
  }
  shell "$@"
}

pull(){
  podman --root /var/lib/containers pull $1
  chmod -R a+rx /var/lib/containers
  exit
}

adduser(){
  user=$1
  storageconf=/home/$user/.config/containers/storage.conf
  test $(whoami) = root || { echo "[!] please run this as root"; exit 1; }
  grep $user /etc/passwd || {
    #try addgroup $user
    $(which adduser) -h /home/$user $user
    echo "$user:$user" | chpasswd
    cp /etc/motd /home/$user/.motd 
    which loginctl && loginctl enable-linger $user
    sed -i 's|^\('$user'\):\(.*\):\(.*\)|\1:\2:/usr/bin/podmanr|g' /etc/passwd  # change loginshell to podmanr
  }
  usermod --add-subuids 10000-75535 $user
  usermod --add-subgids 10000-75535 $user
  test -f $storageconf || {
    mkdir -p $(dirname $storageconf)
    echo "$cfg_container" > $storageconf
    chown -R $user:$user /home/$user/.config 
    chown root:root $storageconf && chmod 600 $storageconf 
    test -f /var/lib/containers/overlay-images/images.lock || {
      mkdir -p /var/lib/containers/overlay-images /var/lib/containers/overlay-layers
      touch /var/lib/containers/overlay-images/images.lock /var/lib/containers/overlay-layers/layers.lock
    }
  }
  exit 0
}

test "$1 " = "adduser " && "$@"
test "$1 " = "pull "    && "$@"
init "$@"
